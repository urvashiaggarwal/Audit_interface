{
    "project_name": "Do each of the following operations on both ref and comparable values in the given data:\n1. Convert everything to lower case.\n2. Convert standalone roman numerals to arabic.\n3. Remove any extra spaces.\n4. Change \"&\" to \"and\".\n5. Remove any other special characters, except \"&\".\n\nProduce the output for each of the values given to you.",
    "builder_name": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Convert to lower case.\n2. Remove extra spaces.\n3. Remove words- \"builders\", \"group\", \"developers\", \"realtors\", \"LLP\", \"pvt\", \"ltd\", \"limited\", \"private\", \"realty\", \"Infrastructures\", \"builders and developers\".\n4. Convert all plural words to singular (ex- convert Towers to Tower and Residences to Residence, etc).\n5. Change \"&\" to \"and\".\n6. Remove any other special characters, except \"&\".\n\nProduce the output for each of the values given to you.",
    "project_address": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Split the Ref value by comma to extract locality and city.\n2. For city, normalize as follows: \"Central Mumbai\" → \"Mumbai\", \"Mumbai South\" → \"Mumbai\", \"Western Mumbai\" → \"Mumbai\", \"Thane Outskirts\" → \"Thane\", \"Beyond Thane\" → \"Thane\", \"Mira Road and beyond\" → \"Beyond Mira Road\".\n3. From comparable, extract the locality and city that match those in ref (after normalization).\n4. Remove any special characters and extra spaces from all values.\n5. If the locality and city from ref are not present in comparable, return the normalized project address (removing extra spaces and special characters).\n\nProduce the output for each of the values given to you.",
    "avg_price_psft_type": "Do each of the following operations on both ref and comparable values in the given data:\n\nThe comparable prices can be an absolute amount or a range. The values can be a combination of words and numbers.\n\n1. Ignore words and extract prices only. Prices can be a range (eg. Rs 10500-12550) or a point value (e.g. Rs 15000)\n2. If the price is a point give output as \"Point\" and if the price is a range give the output as \"Range\".\n\nProduce the output for each of the values given to you.",
    "avg_price_psft": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Remove special characters, symbols or \"Rs\" and extra spaces.\n2. Convert price mentioned in short as whole number. Ex- 10.3K to 10300, 18k- 20k to 18000-20000.\n\nProduce the output for each of the values given to you.",
    "property_type": "Do each of the following operations on both ref and comparable values in the given data:\nValue in this data_point_name will be a combination of config and property type.\n\n1. Remove configs (ex- 2 bhk, 1 rk, 1 bed).\n2. Extract the property type only, i.e., Apartment (also called as Flat, Penthouse, Pentsuites), Villas (also called as villa, row houses), Studio Apartment (also called as 1 RK, studio, serviced apartments, bed studio), independent floor (also called as ind floor, builder floor), land (also called as plot, residential plot), etc.\n3. Remove any special characters and extra spaces.\n4. Sort the extracted property type.\n\nProduce the output for each of the values given to you.",
    "completion_date": "Ref and comparable values are different format of month, date and year of completion (Ex- mm/dd/yyyy or Month-Year or Possession will start from Month, Year).\nDo each of the following operations on both ref and comparable values in the given data:\n\n1. Remove words- \"Ready to move\", \"R2M\", \"RTM\", \"Ready\", \"Under Construction\", \"UC\", \"ongoing\", \"New Launch\", \"NL\", \"new\", \"Partial Ready\", \"Partially Ready to move\", \"Partially Ready\".  \n2. Extract the completion date and convert it into Month-Year format (eg. June-2025) to form Converted Date.\n\nProduce the output for each of the values given to you.",
    "project_area": "Data will be an area value. Area will be a measure and a unit. Unit of area can be in different formats like- acres/acre, hectare, sq ft, sq yards.\n\nDo each of the following operations on both ref and comparable values in the given data:\n\n1. Remove any special characters.\n2. Remove details like \"(75% open space) or \"60% open area\".\n3. Convert all area to acres.\n4. Round the area to 2 digits of decimal places. \n5. Remove the word acre/ acres.\n\nProduce the output for each of the values given to you.",
    "rera": "Each value will be a sequence of numbers and alphabets and special characters (example: GGM/831/563/2024/58)\nDo each of the following operations on both ref and comparable values in the given data:\n\n1. Convert all to upper case.\n2. Change \"Rera Not Applicable\", \"Not Applicable\" and \"OC Applied\" to NA.\n3. Remove special characters, except \",\".\n\nProduce the output for each of the values given to you.",
    "project_size_tower_count": "Do each of the following operations on both ref and comparable values in the given data:\n1. Ignore words and extract only the number of towers.\n\nProduce the output for each of the values given to you.",
    "project_size_unit_count": "Do each of the following operations on both ref and comparable values in the given data:\n1. Ignore words and extract the count of  units in the project only.\n\nProduce the output for each of the values given to you.",
    "configs": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Convert float values to lowest integer (ex- 3.5 BHK should be rounded down to 3 BHK).\n2. Convert unit values (BHK, bhk, RK) to uppercase. \n3. Sort the order in increasing sequence of integers and alphabetically if the integers are the same.\n\nProduce the output for each of the values given to you.",
    "amenities_count": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Extract only numbers.\n\nProduce the output for each of the values given to you.",
    "price_range": "For the Project Price Range, the data will be price details. The price can be an absolute amount or a range. The price formats in the reference and comparables may vary (e.g., Cr, C, Crores, ₹, Rs, L, Lakhs, Lacs, Lac).\nDo each of the following operations on both ref and comparable values in the given data:\n\n1. Convert all price into Crore.\n2. Convert all prices mentioned in short to whole number (ex- 16.8k to be converted to 16800 and 96L to be converted to 9600000).\n3. Extract only the numeric part and remove all words and special characters, except \"-\".\n\nProduce the output for each of the values given to you.",
    "photos": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Extract only numbers.\n\nProduce the output for each of the values given to you.",
    "videos": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Extract only numbers.\n\nProduce the output for each of the values given to you.",
    "review_count": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Extract only numbers.\n\nProduce the output for each of the values given to you.",
    "builder_established_date": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Convert contracted years (e.g., '95) to full years (e.g., 1995).\n2. For duration values, extract the numeric part and subtract it from 2025 to get the establishment year.\n3. Remove any words or special characters.\n4. Normalize all values to a standard 4-digit year.\n\nProduce the output for each of the values given to you.",
    "builder_project_count": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Extract only numbers.\n\nProduce the output for each of the values given to you.",
    "possession_status": "Do each of the following operations on both ref and comparable values in the given data:\n\n1. Remove extra spaces and special characters.\n2. Change- R2M, RTM, Ready to Ready to Move.\n3. Change- UC, ongoing to Under Construction.\n4. Change- NL, new to New Launch.\n\nProduce the output for each of the values given to you."
}
